pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--isofight: don't die or fall
function _init()
  drawtitle=false
  titleoffset=-32
  cameraoffset=0
  restarttimer=nil
  firstrun=true
  num_players=2
  countround=true
  fb={}
  p={{id=1,
     clr=14,
     roundwins=0,
     activespr=0,
     width=2,
     height=2,
     idlespr=0,
     walkspr={2,0,4,6},
     blockspr=12,
     projectilespr=66,
     drc=false,
     x=36,
     y=50,
     sx=36,
     sy=50,
     dx=0,
     dy=0,
     xdir=0,
     ydir=0,
     framecounter=0,
     activemove=0,
     halt=false,
     status={hp=50,
             stocks=2,
             attacking=false,
             blocking=false,
             projectile=false,
             knockup=0,
             knockback=0,
             falling=false,
             dead=false},
     moves={atk1={s={8,8},a={10,10},r={12,4},
            ra=14,i=2,d=5},
            atk2={s={10,14},a={20,64},r={25,4}},
            atk3={s={10,32},a={20,32},r={15,32}}}},
    {id=2,
     clr=12,
     roundwins=0,
     activespr=32,
     width=2,
     height=2,
     idlespr=32,
     walkspr={34,32,36,38},
     blockspr=44,
     projectilespr=98,
     drc=true,
     x=78,
     y=50,
     sx=78,
     sy=50,
     dx=0,
     dy=0,
     xdir=0,
     ydir=0,
     framecounter=0,
     activemove=0,
     halt=false,
     status={hp=50,
             stocks=2,
             attacking=false,
             blocking=false,
             projectile=false,
             knockup=0,
             knockback=0,
             falling=false,
             dead=false},
     moves={atk1={s={8,40},a={10,42},r={12,36},
                  ra=14,i=2,d=5},
            atk2={s={10,46},a={20,96},r={25,36}},
            atk3={s={10,0},a={20,0},r={15,0}}}
    }
  } 
end

function _update60()
 if drawtitle==false then
 	if _roundend()==nil then
  --update characters
   for c in all(p) do
    c.dx=0 c.dy=0 
    fb_hitcalc()
    char_dpad(c)
    char_move(c)
    char_fall(c)
    char_face()
    char_updateattacks(c)
    char_halt(c)
   end
   for f in all(fb) do
    f.x+=f.dx
    f.y+=f.dy
   end
  elseif p[1].roundwins<2
   and p[2].roundwins<2 then
   _softrestart() 
  else _fullrestart() end
 end
end

function _draw()
 if drawtitle==true then
  cls()
  _drawtitle(titleoffset)
  initoffset=titleoffset
  titleoffset+=1
  if titleoffset>10 then 
  titleoffset=-32 end
 else
  cam_screenshake()
 	cls()
  if _roundend()==p[1] or _roundend()==p[2] then
   _gameend()
  else
 	 _drawz()
   _drawui()
  end
  if firstrun then
   char_respawn(p[1])
   char_respawn(p[2]) 
   firstrun=false 
  end
 end
end

function _drawtitle(q)
 startx=q
 starty=-128 
 rows=16
 while rows>0 do
  x=startx 
  y=starty 
  c=16
  while c>0 do
   print('punch dads',x,y,14)
   print('punch dads',x+16,y+8,12)
   x=x-27 y=y+8 c=c-1
  end
  startx=startx+32
  starty=starty+16
  rows=rows-1
 end

end

function _drawui()
 print('health: ',0,1,14)
 print(p[1].status.hp,30,1,14)
 print('stocks: ',0,8,14)
 print(p[1].status.stocks,30,8,14)
 print('health: ',90,1,12)
 print(p[2].status.hp,120,1,12)
 print('stocks: ',90,8,12)
 print(p[2].status.stocks,120,8,12)
 print(p[1].roundwins,48,110,14)
 print('round',54,110,5)
 print(p[2].roundwins,76,110,12)
end

function _drawtilemap()
 mapdone=false
	startx=48 
 starty=32 
 rows=4
	while rows>0 do
		x=startx 
  y=starty 
  c=4
		while c>0 do
			spr(128,x,y,32,32)
			x=x-16 y=y+8 c=c-1
		end
		startx=startx+16
		starty=starty+8
		rows=rows-1
	end
 mapdone=true
end

function _drawchar(c)
 if c.framecounter<=0
  and c.walk==false then
	  c.activespr=c.idlespr 
 end
 spr(c.activespr, c.x, c.y,
     c.width, c.height, c.drc)
 if c.status.falling==true and c.y>128 then
  print(c.fallcounter,c.sx+6,c.sy+6,c.clr)
 end
 --print('a: ',0,16,14)
 --print(p[1].status.attacking,8,16,14)
 --print('b: ',0,24,14)
 --print(p[1].status.blocking,8,24,14)
 --print('f: ',0,32,14)
 --print(p[1].status.falling,8,32,14)
 --print('d: ',0,40,14)
 --print(p[1].status.dead,8,40,14)
end

function _drawz()
	if p[1].y>p[2].y then
  _drawtilemap() 
  _drawchar(p[2]) 
  fb_draw()
  _drawchar(p[1]) 
 end
	if p[1].y<=p[2].y then
		_drawtilemap() 
  _drawchar(p[1])
  fb_draw() 
  _drawchar(p[2]) 
 end
	if char_fellofftop(p[1]) then
		_drawchar(p[1]) 
  _drawtilemap()
  fb_draw() 
  _drawchar(p[2]) 
 end
	if char_fellofftop(p[2]) then
		_drawchar(p[2]) 
  _drawtilemap()
  fb_draw() 
  _drawchar(p[2]) 
 end
end

function _roundend()
 if p[1].status.hp<=0 or 
 p[1].status.stocks<=0 then 
  return p[2]
 elseif p[2].status.hp<=0 or 
 p[2].status.stocks<=0 then
  return p[1]
 else 
  return nil 
 end
end

function _softrestart()
 if restarttimer==nil then
  restarttimer=60
 elseif restarttimer>0 then
  restarttimer-=1
 elseif btn(4,0) or btn(4,1) then
  p[1].status.hp=50
  p[1].status.stocks=2
  p[2].status.hp=50
  p[2].status.stocks=2
  firstrun=true
  countround=true
 end
end

function _gameend()
 if _roundend()==p[1] and countround==true then
  countround=false
  p[1].roundwins+=1
 elseif _roundend()==p[2] and countround==true then
  countround=false
  p[2].roundwins+=1
 end
 if _roundend()==p[1] then
  if p[1].roundwins<2 then
   print('k.o! pink dad won the round!',10,40,14)
   print('press (a) to continue',23,60,14) 
  else
   print('player 1 wins!',36,40,14)
   print('press (a) to run it back',20,60,14) 
  end
 elseif _roundend()==p[2] then
  if p[2].roundwins<2 then
   print('k.o! blue dad won the round!',10,40,12)
   print('press (a) to continue',23,60,12) 
  else
   print('player 2 wins!',36,40,12)
   print('press (a) to run it back',20,60,12) 
  end
 end
end

function _fullrestart()
 if restarttimer==nil then
  restarttimer=60
 elseif restarttimer>0 then
  restarttimer-=1
 elseif btn(4,0) or btn(4,1) then
  run()
 end
end

function attack_1(c)
 local m=c.moves.atk1
 local op=char_getop(c)
 local ctrl=c.id-1
 if btn(4, ctrl) and c.activemove==0 then
   c.status.attacking=true
   attack_anim(c,m)
   c.activemove=1
 elseif c.activemove==1 then
  c.status.attacking=true
  char_blockcheck(c,m.ra)
  if attack_anim(c,m)=='a' then
   char_fwdstep(c,0.5)
   char_blockcheck(c,m.ra)
   if char_isinrange(c,m.ra) then
    attack_impact(op,m) end
  elseif attack_anim(c,m)=='r' then
   char_blockreset(op) end
 elseif c.activemove!=0 then c.status.attacking=true
 else 
  c.status.attacking=false
  c.activemove=0
  char_blockreset(op) end
end

function attack_2(c)
 local m=c.moves.atk2
 local op=char_getop(c)
 local ctrl=c.id-1
 local opctrl=op.id-1
 if btn(5, ctrl) and c.activemove==0 then
   c.status.attacking=true
   attack_anim(c,m)
   c.activemove=2
 elseif c.activemove==2 then
  c.status.attacking=true
  if attack_anim(c,m)=='a' then
   if c.status.projectile==false then
    if op.x<c.x then fb_throw(c,-1)
    else fb_throw(c,1) end
    c.status.projectile=true
   end
   char_backstep(c,0.5)
 elseif attack_anim(c,m)=='r' then
   char_blockreset(op) end
 elseif c.activemove!=0 then c.status.attacking=true
 else 
  c.status.attacking=false
  c.activemove=0
  char_blockreset(op) end
end

function attack_anim(c,m)
 if c.framecounter<=0 and c.activemove==0 then
  c.framecounter=m.s[1]+m.a[1]+m.r[1]
  c.activespr=m.s[2]
  return 's'
 elseif c.framecounter>=m.a[1]+m.r[1] then
  c.activespr=m.s[2]
  return 's'
 elseif c.framecounter>=m.r[1] then
  c.activespr=m.a[2]
  return 'a'
 elseif c.framecounter>=0 then
  c.activespr=m.r[2] 
  return 'r' end
end

function attack_impact(c,m)
 local op=char_getop(c)
 if c.status.blocking==false then
  if c.status.knockback<=0 then
   cameraoffset=0.2
   c.status.hp-=m.d
   c.status.knockback=m.i end
  if op.y-2>c.y then
   c.status.knockup=m.i/2
  elseif op.y+2<c.y then
   c.status.knockup=-(m.i/2) end
 end
end

function cam_screenshake()
  local fade = 0.15
  local offset_x=16-rnd(32)
  local offset_y=16-rnd(32)
  offset_x*=cameraoffset
  offset_y*=cameraoffset
  
  camera(offset_x,offset_y)
  cameraoffset*=fade
  if cameraoffset<0.05 then
    camereaoffset=0
  end
end

function char_block(c)
  c.status.blocking=true
  c.status.activemove=0
  c.activespr=c.blockspr
end

function char_blockcheck(c,r)
 local op=char_getop(c)
 if char_isinrange(c,r) then
  if op.x<c.x and op.xdir==-1 then
   char_block(op)
  elseif op.x>c.x and op.xdir==1 then
   char_block(op)
  end
 end
end

function char_blockreset(c)
 c.status.blocking=false
end

function char_dpad(c)
 local ctrl=c.id-1
 if btn(0, ctrl) then
  c.xdir=-1
 elseif btn(1, ctrl) then
  c.xdir=1
 else c.xdir=0
 end
 if btn(2, ctrl) then
  c.ydir=-1
 elseif btn(3, ctrl) then
  c.ydir=1
 else c.ydir=0
 end
end

function char_face()
	if p[1].x<p[2].x then
		p[1].drc=false p[2].drc=true 
 end
	if p[1].x>p[2].x then
		p[1].drc=true  p[2].drc=false 
 end
end

function char_fall(c)
 clr=6
 if pget(c.x-2,c.y+18)!=clr
  and pget(c.x+9,c.y+18)!=clr then 
   if c.status.felly==nil then
  		c.status.felly=c.y 
   end
  	c.status.falling=true 
 end
 if c.status.falling==true then
  c.status.knockback=0
  c.status.knockup=0
  c.y+=2
  if c.y>128 then
   time_falldelay(c)
  end
 end
 if c.status.falling==true and c.y>512 then
  c.status.stocks-=1
 	char_respawn(c)
 end
end

function time_falldelay(c)
 if c.y<256 then
  c.fallcounter=3
 elseif c.y<384 then
  c.fallcounter=2
 elseif c.y<512 then
  c.fallcounter=1
 end
end

function char_fellofftop(c)
	if c.status.falling==true 
  and c.status.felly<=48 then 
   return true 
 end
end

function char_getcollisions(c)
 local op=char_getop(c)
 local collisions={}
 if c.y<=op.y-5 or c.y>=op.y+5 then
  collisions.coly=false
 else collisions.coly=true end
 if c.x-op.x<=9 and op.x-c.x<=0 then
  collisions.cl=true
 else collisions.cl=false end
 if c.x-op.x>=-9 and op.x-c.x>=0 then
  collisions.cr=true
 else collisions.cr=false end
 if c.x-op.x>8 or c.x-op.x<-8 then
  collisions.cu=false
 else collisions.cu=true end
 if collisions.coly and collisions.cl then
  collisions.coll=true 
 else collisions.coll=false end
 if collisions.coly and collisions.cr then
  collisions.colr=true 
 else collisions.colr = false end
 return collisions
end

function char_getop(c)
 if c.id==1 then 
  return p[2] 
 end
 if c.id==2 then 
  return p[1] 
 end
end

function char_isinrange(c,r)
 local op=char_getop(c)
 local x=char_getcollisions(c)
 if op.x-c.x<=r and op.x-c.x>0 and x.coly then
  return true
 elseif c.x-op.x<=r and c.x-op.x>=0 and x.coly then
  return true
 else 
  return false 
 end
end

function char_knock(c)
 local op=char_getop(c)
 if c.x<op.x then
  c.x-=c.status.knockback
  c.y-=c.status.knockup
  c.status.knockback-=0.15 
  if c.status.knockup>0 then
   c.status.knockup-=0.075
  elseif c.status.knockup<0 then
   c.status.knockup+=0.075 
  end
 elseif c.x>op.x then
  c.x+=c.status.knockback
  c.y-=c.status.knockup
  c.status.knockback-=0.15
  if c.status.knockup>0 then
   c.status.knockup-=0.075
  elseif c.status.knockup<0 then
   c.status.knockup+=0.075 
  end 
 end
end

function char_move(c)
 local ctrl=c.id-1
 local op=char_getop(c)
 if c.status.knockback>0 then
  char_knock(c)
 elseif c.halt==false then
	 c.walk=false
	 if btn(0, ctrl) then char_walk(c,0) end
  if btn(1, ctrl) then char_walk(c,1) end
  if btn(2, ctrl) then char_walk(c,2) end
  if btn(3, ctrl) then char_walk(c,3) end
  if c.walk then 
   char_walkanim(c)
   c.x+=c.dx
   c.y+=c.dy
  end
 end
end

function char_halt(c)
 if c.status.attacking 
 or c.status.blocking 
 or c.status.falling 
 or c.status.dead then
  c.halt=true
 elseif c.status.knockback>0
 or c.status.knockup>0 then
  c.halt=true
 else c.halt=false end
end

function char_respawn(c)
 c.status.falling=false
 c.status.knockback=0
 c.x=c.sx 
 c.y=c.sy
 c.status.felly=nil
end

function char_fwdstep(c,d)
 local op=char_getop(c)
 if op.x<c.x and c.x-op.x>9 then 
  c.x-=d
 elseif op.x>c.x and op.x-c.x>9 then 
  c.x+=d 
 end
end

function char_backstep(c,d)
 local op=char_getop(c)
 if op.x<c.x and c.x-op.x>9 then 
  c.x+=d
  c.y-=c.ydir/4
 elseif op.x>c.x and op.x-c.x>9 then 
  c.x-=d 
  c.y-=c.ydir/4
 end
end

function char_updateattacks(c)
 if c.framecounter>0 then
  c.framecounter-=1
 else
  c.activemove=0 
  c.status.projectile=false
 end
 attack_1(c)
 attack_2(c)
end

function char_walk(c,d)
 local op=char_getop(c)
 local x=char_getcollisions(c)
 if c.halt==false then
  if d==0 and x.coll==false then
   c.dx=-0.5 c.xdir=-1 c.walk=true end
  if d==1 and x.colr==false then
   c.dx=0.5 c.xdir=1 c.walk=true end
  if d==2 then
   c.ydir=-1
   if x.cu==true then
    if c.y>=op.y+6 or op.y>=c.y+5 then
     c.dy=-0.25 c.walk=true end 
   else c.dy=-0.25 c.walk=true end
  end
  if d==3 then
   c.ydir=1
   if x.cu==true then
    if c.y<=op.y-6 or op.y<=c.y-5 then
     c.dy=0.25 c.walk=true end 
   else c.dy=0.25 c.walk=true end
  end
 end
end

function char_walkanim(c)
	stride=6
	if c.walkframe==nil then
		c.walkframe=stride
		c.activespr=c.walkspr[1]
		c.walkframe-=1 
 end
	if c.walkframe>0 then
		c.activespr=c.activespr
		c.walkframe-=1
	elseif c.activespr==c.walkspr[1] then
		c.walkframe=stride
		c.activespr=c.walkspr[2]
	elseif c.activespr==c.walkspr[2] then
		c.walkframe=stride
		c.activespr=c.walkspr[3]
	elseif c.activespr==c.walkspr[3] then
		c.walkframe=stride
		c.activespr=c.walkspr[4]
	else 
  c.walkframe=stride
		c.activespr=c.walkspr[1]
	end
end

function fb_throw(c,d)
 local op=char_getop(c)
 local f = {
  t=op, sp=c.projectilespr, 
  x=c.x, y=c.y,
  dx=d, dy=c.ydir/2,
 }
 add(fb,f)
 c.ydir=0
end

function fb_draw()
 for f in all(fb) do
   spr(f.sp,f.x,f.y)
  end
end

function fb_hitcalc()
  for f in all(fb) do
    if f.t.x-f.x<20 and f.t.x-f.x>-30
      and f.t.y-f.y<4 and f.t.y-f.y>-6 then
        if f.t.xdir==f.dx then
          f.t.status.blocking=true 
          f.t.activespr=f.t.blockspr
        end
      if f.t.x-f.x<2 and f.t.x-f.x>-10
        and f.t.y-f.y<4 and f.t.y-f.y>-6 then 
          if f.t.xdir!=f.dx then
            fb_impact(f)
            del(fb, f)
          else
            del(fb, f)
          end
      end
    end
  end
end

function fb_impact(f)
 cameraoffset=0.2
 f.t.status.hp-=5
 if f.t.status.knockback<=0 then
      f.t.status.knockback=1.5 
     end
     if f.y>f.t.y then
      f.t.status.knockup=0.75
     elseif f.y<f.t.y then
      f.t.status.knockup=-0.75 
     end 
end

__gfx__
000000022e000000000000022e000000000000022e000000000000022e00000000000022e00000000000000022e00000000000022e00000000000022e0000000
000000025f000000000000025f000000000000025f000000000000025f00000000000025f00000000000000025f00000000000025f00000000000025f0000000
000000022e000000000000022e000000000000022e000000000000022e00000000000022e00000000000000022e00000000000022e5f000000000022e0000000
000000222220000000000022222000000000002222200000000000222220000000000222220000000000002eeeeeeeef0000002225f2000005f0022222000000
0000022e22e200000000022e22e200000000002e22e200000000022e22e20000000022e22e20000000000222222222250000002e22e2000000e222e22e200000
000002e222e20000000002e222e200000000002e22e20000000002e222e2000000002e222e2000000000022222e0000000000022ee220000000e2e222e200000
000002e222e2000000002e0222e2e00000000002e2e00000000002e222e200000002e0222e2e00000000220222e000000000002222e200000000e0222e2eef00
000002e555f2000000002e0555f02ef0000000022ef00000000002e555f20000002e00555f02e00000005f0555f000000000005555f00000000000555f222500
000002e222e2000000002e0222e002500000000225f00000000002e222e20000005f00222e05f0000000000222e000000000002222e00000000000222e000000
000005f2e2ef000000005f02e2e000000000000222e00000000005f2e2ef00000000002e2e00000000000002e2e0000000000022e2e000000000002e2e000000
0000002e02e00000000000022e2000000000002e02e000000000002e02e000000000002e22e0000000000002e22e00000000002e02e000000000002e22e00000
0000002e02e000000000000022e000000000002e022e00000000002e02e00000000002e0022e00000000002e0022e0000000002e02e00000000002e0022e0000
0000002e02e0000000000002e22e0000000002e0002e00000000002e02e0000000002e00002e0000000002e00002e0000000002e02e00000000002e00002e000
0000002e02e000000000052e002e0000000052e0002e00000000002e02e000000052e00002e0000000052e000002e0000000002e02e0000000052e0000002e00
0000002e02e00000000005e0002e000000005e00002e00000000002e02e00000005e00002e0000000005e000002e00000000002e02e000000005e00000002e00
00000055f55f000000000f000055f0000000f0000055f00000000055f55f000000f0000055f00000000f00000055f00000000055f55f0000000f0000000055f0
000000011d000000000000011d000000000000011d000000000000011d00000000000011d00000000000000011d00000000000011d00000000000011d0000000
000000015f000000000000015f000000000000015f000000000000015f00000000000015f00000000000000015f00000000000015f00000000000015f0000000
000000011d000000000000011d000000000000011d000000000000011d00000000000011d00000000000000011d00000000000011d5f000000000011d0000000
000000111110000000000011111000000000001111100000000000111110000000000111110000000000001ddddddddf0000001115f1000005f0011111000000
0000011d11d100000000011d11d100000000001d11d100000000011d11d10000000011d11d10000000000111111111150000001d11d1000000d111d11d100000
000001d111d10000000001d111d100000000001d11d10000000001d111d1000000001d111d1000000000011111d0000000000011dd110000000d1d111d100000
000001d111d1000000001d0111d1d00000000001d1d00000000001d111d100000001d0111d1d00000000110111d000000000001111d100000000d0111d1ddf00
000001d555f1000000001d0555f01df0000000011df00000000001d555f10000001d00555f01d00000005f0555f000000000005555f00000000000555f111500
000001d111d1000000001d0111d001500000000115f00000000001d111d10000005f00111d05f0000000000111d000000000001111d00000000000111d000000
000005f1d1df000000005f01d1d000000000000111d00000000005f1d1df00000000001d1d00000000000001d1d0000000000011d1d000000000001d1d000000
0000001d01d00000000000011d1000000000001d01d000000000001d01d000000000001d11d0000000000001d11d00000000001d01d000000000001d11d00000
0000001d01d000000000000011d000000000001d011d00000000001d01d00000000001d0011d00000000001d0011d0000000001d01d00000000001d0011d0000
0000001d01d0000000000001d11d0000000001d0001d00000000001d01d0000000001d00001d0000000001d00001d0000000001d01d00000000001d00001d000
0000001d01d000000000051d001d0000000051d0001d00000000001d01d000000051d00001d0000000051d000001d0000000001d01d0000000051d0000001d00
0000001d01d00000000005d0001d000000005d00001d00000000001d01d00000005d00001d0000000005d000001d00000000001d01d000000005d00000001d00
00000055f55f000000000f000055f0000000f0000055f00000000055f55f000000f0000055f00000000f00000055f00000000055f55f0000000f0000000055f0
00000022e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000025f00000000999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000022e00000000888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000022eeeeef0000888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000022222225ef00888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e2222500999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000555f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002e2e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002e22e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000002e22e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e02e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002e02e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002e02e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055f55f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000011d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000015f00000000ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000011d00000000111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000011dddddf0000111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000011111115df00111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d1111500ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000555f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001d1d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001d11d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001d11d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000001d01d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001d01d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001d01d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055f55f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000006666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000066666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066666666666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56666666666666666666666666666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55566666666666666666666666666555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555666666666666666666666655555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555556666666666666666665555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555566666666666666555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055555555666666666655555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000555555556666665555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000005555555566555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000005555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
