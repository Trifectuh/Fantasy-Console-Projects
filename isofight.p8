pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--isofight: don't die or fall

function _init()
 restarttimer=nil
 firstrun=true
	num_players=2
 countround=true
 p1roundwins=0
 p2roundwins=0
 --player 1
	p={{id=1,
     --stuff that gets rendered
     activespr=0,
     width=2,
     height=2,
     idlespr=0,
     walkspr={2,0,4,6},
     blockspr=12,
     projectilespr=66,
     drc=false,
     x=36,
     y=50,
     sx=36,
     sy=50,
     dx=0,
     dy=0,
     xdir=0,
     ydir=0,
     framecounter=0,
     activemove=nil,
     halt=false,
     blocking=false,
     --how you lose the game
     status={hp=50,
             stocks=5,
             attacking=false,
             projectile=false,
             knockup=0,
             knockback=0,
             falling=false,
             dead=false},
     --move.framewindow={length,sprite}
     moves={atk1={s={8,8},a={10,10},r={12,4}},
            atk2={s={10,14},a={20,64},r={25,4}},
            atk3={s={10,32},a={20,32},r={15,32}}}},
 --player 2
    {id=2,
     activespr=32,
     width=2,
     height=2,
     idlespr=32,
     walkspr={34,32,36,38},
     blockspr=44,
     projectilespr=98,
     drc=true,
     x=78,
     y=50,
     sx=78,
     sy=50,
     dx=0,
     dy=0,
     xdir=0,
     ydir=0,
     framecounter=0,
     activemove=nil,
     halt=false,
     blocking=false,
     status={hp=50,
             stocks=5,
             attacking=false,
             projectile=false,
             knockup=0,
             knockback=0,
             falling=false,
             dead=false},
     moves={atk1={s={8,40},a={10,42},r={12,36}},
            atk2={s={10,46},a={20,96},r={25,36}},
            atk3={s={10,0},a={20,0},r={15,0}}}}
 } 

fireballs = {}
end

function throwfireball(c,d)
 local op=getopid(c)
 local f = {
  t=op,
  sp=c.projectilespr,
  x=c.x,
  y=c.y,
  dx=d,
  dy=c.ydir/2,
 }
 add(fireballs,f)
 c.ydir=0
end

function drawfireballs()
 for f in all(fireballs) do
   spr(f.sp,f.x,f.y)
  end
end

function fireballdmg()
--hacky and bad below dont look
  p[1].halt=false
  p[1].blocking=false
  p[2].halt=false
  p[2].blocking=false
  for f in all(fireballs) do
    if f.t.x-f.x<20 and f.t.x-f.x>-30
      and f.t.y-f.y<4 and f.t.y-f.y>-6 then
        if f.t.xdir==f.dx then
          f.t.halt=true
          f.t.blocking=true 
          f.t.activespr=f.t.blockspr
        end
      if f.t.x-f.x<2 and f.t.x-f.x>-10
        and f.t.y-f.y<4 and f.t.y-f.y>-6 then
          del(fireballs, f) 
          if f.t.xdir!=f.dx then
            f.t.status.hp-=10
            f.t.status.knockback+=1.5
          end
      end
    end
  end
end

function winner()
 if p[1].status.hp<=0 or 
 p[1].status.stocks<=0 then 
  return p[2]
 elseif p[2].status.hp<=0 or 
 p[2].status.stocks<=0 then
  return p[1]
 else 
  return nil 
 end
end

function victory()
 if winner()==p[1] and countround==true then
  countround=false
  p1roundwins+=1
 elseif winner()==p[2] and countround==true then
  countround=false
  p2roundwins+=1
 end
 if winner()==p[1] then
  if p1roundwins<2 then
   print('k.o! pink dad won the round!',10,40,14)
   print('press (a) to continue',23,60,14) 
  else
   print('player 1 wins!',36,40,14)
   print('press (a) to run it back',20,60,14) 
  end
 elseif winner()==p[2] then
  if p2roundwins<2 then
   print('k.o! blue dad won the round!',10,40,12)
   print('press (a) to continue',23,60,12) 
  else
   print('player 2 wins!',36,40,12)
   print('press (a) to run it back',20,60,12) 
  end
 end
end

function _update60()
 --check for win conditions
	if winner()==nil then
 --update characters
  for c in all(p) do
   c.dx=0 c.dy=0 
   readdir(c)
   move(c)
   fall(c)
   attacks(c)
   face() 
   fireballdmg()
  end
  for f in all(fireballs) do
   f.x+=f.dx
   f.y+=f.dy
  end
 elseif p1roundwins<2
  and p2roundwins<2 then
  softrestart() 
 else fullrestart()
 end
end

function _draw()
	cls()
 if winner()==p[1] or winner()==p[2] then
  victory()
 else
	 drawz()
  drawui()
 end
 if firstrun then
  respawn(p[1])
  respawn(p[2]) 
  firstrun=false 
 end
end

function softrestart()
 if restarttimer==nil then
  restarttimer=60
 elseif restarttimer>0 then
  restarttimer-=1
 elseif btn(4,0) or btn(4,1) then
  p[1].status.hp=50
  p[1].status.stocks=5
  p[2].status.hp=50
  p[2].status.stocks=5
  firstrun=true
  countround=true
 end
end

function fullrestart()
 if restarttimer==nil then
  restarttimer=60
 elseif restarttimer>0 then
  restarttimer-=1
 elseif btn(4,0) or btn(4,1) then
  run()
 end
end

function drawui()
 print('health: ',0,1,14)
 print(p[1].status.hp,30,1,14)
 print('stocks: ',0,8,14)
 print(p[1].status.stocks,30,8,14)
 print('health: ',90,1,12)
 print(p[2].status.hp,120,1,12)
 print('stocks: ',90,8,12)
 print(p[2].status.stocks,120,8,12)
 print(p1roundwins,48,110,14)
 print('round',54,110,5)
 print(p2roundwins,76,110,12)
end

function drawz()
	if p[1].y>p[2].y then
  tilemap() 
  drawchar(p[2]) 
  drawfireballs()
  drawchar(p[1]) 
 end
	if p[1].y<=p[2].y then
		tilemap() 
  drawchar(p[1])
  drawfireballs() 
  drawchar(p[2]) 
 end
	if fellofftop(p[1]) then
		drawchar(p[1]) 
  tilemap()
  drawfireballs() 
  drawchar(p[2]) 
 end
	if fellofftop(p[2]) then
		drawchar(p[2]) 
  tilemap()
  drawfireballs() 
  drawchar(p[2]) 
 end
end

function drawchar(c)
 if c.framecounter<=0
  and c.walk==false then
	  c.activespr=c.idlespr 
 end
 spr(c.activespr, c.x, c.y,
     c.width, c.height, c.drc)
end

function face()
	if p[1].x<p[2].x then
		p[1].drc=false p[2].drc=true 
 end
	if p[1].x>p[2].x then
		p[1].drc=true  p[2].drc=false 
 end
end

function walkanim(c)
	stride=6
	if c.walkframe==nil then
		c.walkframe=stride
		c.activespr=c.walkspr[1]
		c.walkframe-=1 
 end
	if c.walkframe>0 then
		c.activespr=c.activespr
		c.walkframe-=1
	elseif c.activespr==c.walkspr[1] then
		c.walkframe=stride
		c.activespr=c.walkspr[2]
	elseif c.activespr==c.walkspr[2] then
		c.walkframe=stride
		c.activespr=c.walkspr[3]
	elseif c.activespr==c.walkspr[3] then
		c.walkframe=stride
		c.activespr=c.walkspr[4]
	else 
  c.walkframe=stride
		c.activespr=c.walkspr[1]
	end
end

function fall(c)
 clr=6
 if pget(c.x-2,c.y+18)!=clr
  and pget(c.x+9,c.y+18)!=clr then 
   if c.status.felly==nil then
  		c.status.felly=c.y 
   end
  	c.status.falling=true 
 end
 if c.status.falling==true then
  c.y+=2
 end
 if c.status.falling==true and c.y>128 then
  c.status.stocks-=1
 	respawn(c)
 end
end

function respawn(c)
 c.status.falling=false
 c.status.knockback=0
 c.x=c.sx 
 c.y=c.sy
 c.status.felly=nil
end

function fellofftop(c)
	if c.status.falling==true 
  and c.status.felly<=48 then 
   return true 
 end
end

function tilemap()
 mapdone=false
	startx=48 
 starty=32 
 rows=4
	while rows>0 do
		x=startx 
  y=starty 
  c=4
		while c>0 do
			spr(128,x,y,32,32)
			x=x-16 y=y+8 c=c-1
		end
		startx=startx+16
		starty=starty+8
		rows=rows-1
	end
 mapdone=true
end

function getopid(char)
 if char.id==1 then 
  return p[2] 
 end
 if char.id==2 then 
  return p[1] 
 end
end

function readdir(char)
 local ctrl=char.id-1
 --read button inputs for aiming
 if btn(0, ctrl) then
  char.xdir=-1
 elseif btn(1, ctrl) then
  char.xdir=1
 else char.xdir=0
 end
 if btn(2, ctrl) then
  char.ydir=-1
 elseif btn(3, ctrl) then
  char.ydir=1
 else char.ydir=0
 end
end

function move(char)
 local ctrl=char.id-1
 local op=getopid(char)
 --do movement stuff
 if char.status.knockback>0 then
  applyknockback(char)
 elseif char.halt==false then
  checkcollision(char)
	 --check for btn then move
	 char.walk=false
	 if btn(0, ctrl) and coll==false then 
   char.dx=-0.5 
   char.xdir=-1
   char.walk=true 
  end
  if btn(1, ctrl) and colr==false then   
 	 char.dx=0.5 
   char.xdir=1
   char.walk=true 
  end
  if btn(2, ctrl) then
   char.ydir=-1
   if cu==true then
    if char.y>=op.y+6 or op.y>=char.y+5 then
     char.dy=-0.25 
     char.walk=true 
    end 
   else 
    char.dy=-0.25 
    char.walk=true 
   end 
  end
  if btn(3, ctrl) then
   char.ydir=1
 	 if cu==true then
    if char.y<=op.y-6 or op.y<=char.y-5 then
     char.dy = 0.25 
     char.walk=true 
    end 
   else 
    char.dy = 0.25 
    char.walk=true 
   end 
  end
  if char.walk then
 	 walkanim(char) 
  end

  char.x+=char.dx
  char.y+=char.dy
 end
end

function checkcollision(char)
 local op=getopid(char)
 if char.y<=op.y-5 or char.y>=op.y+5 then
  coly=false
 else 
  coly=true 
 end
 if char.x-op.x<=9 and op.x-char.x<=0 then
  cl=true
 else 
  cl=false 
 end
 if char.x-op.x>=-9 and op.x-char.x>=0 then
  cr=true
 else 
  cr=false 
 end
 if char.x-op.x>8 or char.x-op.x<-8 then
  cu=false
 else 
  cu=true 
 end
 if coly and cl then
  coll=true 
 else 
  coll=false 
 end
 if coly and cr then
  colr=true 
 else 
  colr = false 
 end
end

function applyknockback(char)
 local op=getopid(char)
 if char.x<op.x then
  char.x-=char.status.knockback
  char.y-=char.status.knockup
  char.status.knockback-=0.15 
  if char.status.knockup>0 then
   char.status.knockup-=0.075
  elseif char.status.knockup<0 then
   char.status.knockup+=0.075 
  end
 elseif char.x>op.x then
  char.x+=char.status.knockback
  char.y-=char.status.knockup
  char.status.knockback-=0.15
  if char.status.knockup>0 then
   char.status.knockup-=0.075
  elseif char.status.knockup<0 then
   char.status.knockup+=0.075 
  end 
 end
end

function attacks(p)
 if p.framecounter>0 then
  p.framecounter-=1
 else
  p.activemove=0 
  p.status.projectile=false
 end
 if p.blocking==false then
  atk1(p)
  atk2(p)
 end
end

function isinrange(c, r)
 local op=getopid(c)
 if op.x-c.x<=r and op.x-c.x>0 and coly then
  return true
 elseif c.x-op.x<=r and c.x-op.x>=0 and coly then
  return true
 else 
  return false 
 end
end

function atk1(c)
 range=14
 m=c.moves.atk1
 local op=getopid(c)
 local ctrl=c.id-1
 local opctrl=op.id-1
 checkcollision(c)
	--check for btn then atk1
	if btn(4, ctrl) and c.framecounter<=0 
  and c.activemove==0 then
 	 c.halt=true
   c.activemove=1
   c.framecounter=m.s[1]+m.a[1]+m.r[1]
		 c.activespr=m.s[2]
 elseif c.activemove==1 then
 	c.halt=true
  if isinrange(c, range) then
    if op.x<c.x and btn(0,opctrl) then
     op.halt=true
     op.blocking=true
     op.activespr=op.blockspr
    elseif op.x>c.x and btn(1,opctrl) then
     op.halt=true
     op.blocking=true 
     op.activespr=op.blockspr
    end
  else 
   op.blocking=false
   op.activespr=op.walkspr[0]
   op.halt=false 
  end
  if c.framecounter>=m.a[1]+m.r[1] then 
   c.activespr=m.s[2]
  elseif c.framecounter>=m.r[1]
   then c.activespr=m.a[2]
    if op.x<c.x and c.x-op.x>9 then 
     c.x-=0.5
    elseif op.x>c.x and op.x-c.x>9 then 
     c.x+=0.5 
    end
    if isinrange(c, range) then
     if op.x<c.x and btn(0,opctrl) then
      op.halt=true
      op.blocking=true
     elseif op.x>c.x and btn(1,opctrl) then
      op.halt=true
      op.blocking=true
     elseif op.status.knockback<=0 then
      op.status.hp-=5
      op.status.knockback=2 
     end
     if c.y>op.y then
      op.status.knockup=1
     elseif c.y<op.y then
      op.status.knockup=-1 
     end 
    end
  elseif c.framecounter>0 then 
   c.activespr=m.r[2]
   op.halt=false
   op.blocking=false
  else 	
  	c.activemove=0 
   c.halt=false 
  end
 else
 	c.halt=false 
 end
end

function atk2(c)
 m=c.moves.atk2
 local op=getopid(c)
 local ctrl=c.id-1
 opctrl=op.id-1
 --check for btn then atk1
 if btn(5, ctrl) and c.framecounter<=0 
  and c.activemove==0 then
   c.halt=true
   c.activemove=2
   c.framecounter=m.s[1]+m.a[1]+m.r[1]
   c.activespr=m.s[2]
 elseif c.activemove==2 then
  c.halt=true
  if c.framecounter>=m.a[1]+m.r[1] then 
   c.activespr=m.s[2]
  elseif c.framecounter>=m.r[1]
   then 
    c.activespr=m.a[2]
    if c.status.projectile==false then
     if op.x<c.x then throwfireball(c,-1)
     else throwfireball(c,1) end
     c.status.projectile=true
    end
    if op.x<c.x and c.x-op.x>9 then 
     c.x+=0.5
     c.y-=c.ydir/4
    elseif op.x>c.x and op.x-c.x>9 then 
     c.x-=0.5 
     c.y-=c.ydir/4
    end
  elseif c.framecounter>0 then 
   c.activespr=m.r[2]
   op.halt=false
   op.blocking=false
  else  
   c.activemove=0 
   c.halt=false
  end
 else
  c.halt=false
 end
end
__gfx__
000000022e000000000000022e000000000000022e000000000000022e00000000000022e00000000000000022e00000000000022e00000000000022e0000000
000000025f000000000000025f000000000000025f000000000000025f00000000000025f00000000000000025f00000000000025f00000000000025f0000000
000000022e000000000000022e000000000000022e000000000000022e00000000000022e00000000000000022e00000000000022e5f000000000022e0000000
000000222220000000000022222000000000002222200000000000222220000000000222220000000000002eeeeeeeef0000002225f2000005f0022222000000
0000022e22e200000000022e22e200000000002e22e200000000022e22e20000000022e22e20000000000222222222250000002e22e2000000e222e22e200000
000002e222e20000000002e222e200000000002e22e20000000002e222e2000000002e222e2000000000022222e0000000000022ee220000000e2e222e200000
000002e222e2000000002e0222e2e00000000002e2e00000000002e222e200000002e0222e2e00000000220222e000000000002222e200000000e0222e2eef00
000002e555f2000000002e0555f02ef0000000022ef00000000002e555f20000002e00555f02e00000005f0555f000000000005555f00000000000555f222500
000002e222e2000000002e0222e002500000000225f00000000002e222e20000005f00222e05f0000000000222e000000000002222e00000000000222e000000
000005f2e2ef000000005f02e2e000000000000222e00000000005f2e2ef00000000002e2e00000000000002e2e0000000000022e2e000000000002e2e000000
0000002e02e00000000000022e2000000000002e02e000000000002e02e000000000002e22e0000000000002e22e00000000002e02e000000000002e22e00000
0000002e02e000000000000022e000000000002e022e00000000002e02e00000000002e0022e00000000002e0022e0000000002e02e00000000002e0022e0000
0000002e02e0000000000002e22e0000000002e0002e00000000002e02e0000000002e00002e0000000002e00002e0000000002e02e00000000002e00002e000
0000002e02e000000000052e002e0000000052e0002e00000000002e02e000000052e00002e0000000052e000002e0000000002e02e0000000052e0000002e00
0000002e02e00000000005e0002e000000005e00002e00000000002e02e00000005e00002e0000000005e000002e00000000002e02e000000005e00000002e00
00000055f55f000000000f000055f0000000f0000055f00000000055f55f000000f0000055f00000000f00000055f00000000055f55f0000000f0000000055f0
000000011d000000000000011d000000000000011d000000000000011d00000000000011d00000000000000011d00000000000011d00000000000011d0000000
000000015f000000000000015f000000000000015f000000000000015f00000000000015f00000000000000015f00000000000015f00000000000015f0000000
000000011d000000000000011d000000000000011d000000000000011d00000000000011d00000000000000011d00000000000011d5f000000000011d0000000
000000111110000000000011111000000000001111100000000000111110000000000111110000000000001ddddddddf0000001115f1000005f0011111000000
0000011d11d100000000011d11d100000000001d11d100000000011d11d10000000011d11d10000000000111111111150000001d11d1000000d111d11d100000
000001d111d10000000001d111d100000000001d11d10000000001d111d1000000001d111d1000000000011111d0000000000011dd110000000d1d111d100000
000001d111d1000000001d0111d1d00000000001d1d00000000001d111d100000001d0111d1d00000000110111d000000000001111d100000000d0111d1ddf00
000001d555f1000000001d0555f01df0000000011df00000000001d555f10000001d00555f01d00000005f0555f000000000005555f00000000000555f111500
000001d111d1000000001d0111d001500000000115f00000000001d111d10000005f00111d05f0000000000111d000000000001111d00000000000111d000000
000005f1d1df000000005f01d1d000000000000111d00000000005f1d1df00000000001d1d00000000000001d1d0000000000011d1d000000000001d1d000000
0000001d01d00000000000011d1000000000001d01d000000000001d01d000000000001d11d0000000000001d11d00000000001d01d000000000001d11d00000
0000001d01d000000000000011d000000000001d011d00000000001d01d00000000001d0011d00000000001d0011d0000000001d01d00000000001d0011d0000
0000001d01d0000000000001d11d0000000001d0001d00000000001d01d0000000001d00001d0000000001d00001d0000000001d01d00000000001d00001d000
0000001d01d000000000051d001d0000000051d0001d00000000001d01d000000051d00001d0000000051d000001d0000000001d01d0000000051d0000001d00
0000001d01d00000000005d0001d000000005d00001d00000000001d01d00000005d00001d0000000005d000001d00000000001d01d000000005d00000001d00
00000055f55f000000000f000055f0000000f0000055f00000000055f55f000000f0000055f00000000f00000055f00000000055f55f0000000f0000000055f0
00000022e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000025f00000000999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000022e00000000888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000022eeeeef0000888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000022222225ef00888990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e2222500999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000555f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000222e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002e2e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002e22e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000002e22e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e02e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002e02e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002e02e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055f55f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000011d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000015f00000000ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000011d00000000111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000011dddddf0000111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000011111115df00111cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d1111500ccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000555f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000111d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001d1d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001d11d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001d11d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000001d01d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001d01d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001d01d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055f55f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000006666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000066666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066666666666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666666666666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56666666666666666666666666666665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55566666666666666666666666666555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555666666666666666666666655555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555556666666666666666665555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555566666666666666555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055555555666666666655555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000555555556666665555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000005555555566555555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555555555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000005555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
